plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

description = 'Java Annotations for Cabe'
version = project.property('annotations_version')

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.encoding = 'UTF-8'
    options.addBooleanOption('html5', true)
}

dependencies {
}

sourceCompatibility = 11
targetCompatibility = 11

group = 'com.dua3.cabe'

ext.scm = 'https://github.com/xzel23/cabe.git'
ext.developerId = 'axh'
ext.developerName = 'Axel Howind'
ext.developerEmail = 'axh@dua3.com'
ext.organization = 'dua3'
ext.organizationUrl = 'https://www.dua3.com'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://opensource.org/licenses/MIT"
        }
    }
    developers {
        developer {
            id project.developerId
            name project.developerName
            email project.developerEmail
            organization project.organization
            organizationUrl project.organizationUrl
        }
    }

    scm {
        url project.scm
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version version
            from components.java
            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.name)
                root.appendNode('url', project.scm)
                root.children().last() + pomConfig
            }
        }
    }

    repositories {
        // Sonatype OSSRH
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = "${ossrhUsername}"
                password = "${ossrhPassword}"
            }
        }
    }
}

// === sign artifacts
signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

tasks.withType(PublishToMavenRepository).configureEach {
    dependsOn publishToMavenLocal
}
